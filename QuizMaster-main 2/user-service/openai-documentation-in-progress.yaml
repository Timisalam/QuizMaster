openapi: 3.0.3
info:
  title: User Service API
  version: 1.0.0
paths:
  /user/login:
    post:
      summary: Log in a user (student or teacher)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /user:
    post:
      summary: Register a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Registration successful
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
  /user/profile:
    get:
      summary: Retrieve the authenticated userâ€™s profile
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
  /user/logout:
    post:
      summary: Invalidate the current session or token
      responses:
        '200':
          description: Logout successful
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
components:
  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          example: "user@example.com"
        password:
          type: string
          example: "yourPassword123"
      required:
        - username
        - password
    LoginResponse:
      type: object
      properties:
        message:
          type: string
          example: "Login successful"
        user:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "John Doe"
            role:
              type: string
              enum: [student, teacher]
              example: "student"
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: "/user/login"
            profile:
              type: object
              properties:
                href:
                  type: string
                  example: "/user/profile"
            logout:
              type: object
              properties:
                href:
                  type: string
                  example: "/user/logout"
    RegisterRequest:
      type: object
      properties:
        name:
          type: string
          example: "Jane Doe"
        email:
          type: string
          example: "jane@example.com"
        password:
          type: string
          example: "securePassword123"
        role:
          type: string
          enum: [student, teacher]
          example: "teacher"
      required:
        - name
        - email
        - password
        - role
    RegisterResponse:
      type: object
      properties:
        message:
          type: string
          example: "Registration successful"
        user:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: "Jane Doe"
            email:
              type: string
              example: "jane@example.com"
            role:
              type: string
              enum: [student, teacher]
              example: "teacher"
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: "/user"
            login:
              type: object
    ProfileResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "John Doe"
            email:
              type: string
              example: "user@example.com"
            role:
              type: string
              enum: [student, teacher]
              example: "student"
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: "/user/profile"
            logout:
              type: object
              properties:
                href:
                  type: string
                  example: "/user/logout"
    LogoutResponse:
      type: object
      properties:
        message:
          type: string
          example: "Successfully logged out"
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: "/user/logout"
            login:
              type: object
              properties:
                href:
                  type: string
                  example: "/user/login"




